#!/bin/sh

do_start() {
	# setup poe-fan and zigbee-gateway
	modprobe rpi-poe-fan
	modprobe cp210x

	# setup link for portainer agent
        MAC=$(cat /sys/class/net/eth0/address | tr -d :)
	ln -s /mnt/cluster-data/$MAC /var/lib/docker

	# avoid early slave pxe boot, to avoid corrupt pxe image (stucking state)
	if [ ! -f /etc/firstbootFlag ]
	then
		/etc/init.d/S*dnsmasq stop
	fi

	# fix expired certificate error on docker swarm after chrony sync
	date -s "2024-01-01 00:00"
	sleep 5
	mkdir -p /var/resolv
	touch /var/resolv/resolv.conf
	/etc/init.d/S*dhcpcd restart
	sleep 3

        # prepare cluster store
        if [ ! -f /etc/firstbootFlag ]
        then
            sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | fdisk /dev/mmcblk0
              n
              p
              3
              
              
              w
              q
EOF
            mkfs.btrfs /dev/mmcblk0p3
            echo -e "UUID=$(blkid /dev/mmcblk0p3 -s UUID -o value)\t/mnt/cluster-data/\tbtrfs\tdefaults\t0\t0\n" >> /etc/fstab
            mount -a
            
            # prepare docker swarm manager config
            mkdir /mnt/cluster-data/$MAC
	    mkdir /mnt/cluster-data/shared-volumes
            mkdir -p /etc/docker
            echo '{ "data-root": "/mnt/cluster-data/'${MAC}'" }' > /etc/docker/daemon.json
	    /etc/init.d/S*dockerd stop
	    while ( ! docker ps )
	    do
	    	/etc/init.d/S*dockerd restart
	    	sleep 3
	    done

            docker swarm init --advertise-addr=5.5.5.1
	    sleep 2
            echo $(docker swarm join-token worker | grep token | awk '{ print $5 }') > /mnt/cluster-data/slave-token.txt
            touch /etc/firstbootFlag
            sync
	    reboot
        else
	    /etc/init.d/S*dockerd restart
	    mount -o remount,ro /
        fi

	# setup ip routing
	iptables -t nat -A POSTROUTING -o eth0.1 -j MASQUERADE
	iptables -A FORWARD -i eth0.1 -o eth0.5 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i eth0.5 -o eth0.1 -j ACCEPT
}

do_stop() {
	echo "S99prepareCluster: nothing to do - single shot script"
}

case "$1" in
        start)
		do_start
                ;;
        stop)
		do_stop
                ;;
        restart)
		do_stop
                sleep 1
		do_start
                ;;
	*)
                echo "Usage: $0 {start|stop|restart}"
                exit 1
esac
